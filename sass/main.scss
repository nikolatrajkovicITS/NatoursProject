/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;


*,
*::after,
*::before {                                         /* Universal selector *: select each and every element on the page, and then apply these declarations here from body  */
  margin: 0;
  padding: 0;  
  box-sizing: inherit;
}                                           /* We add on each element 0 margin and padding and allows us to start without any m and p which browsers add by default. */

html {
    font-size: 62.5%;
}

body {
    font-family: "Lato", sens-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;                        /* That means it's 1.7 times bigger than the predefined line height. */
    color: $color-grey-dark;
    padding: 3rem;

    box-sizing: border-box;
}

.header {
    height: 95vh;                            /* The height of this element should be 95% of the viewport height. */
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.671)), 
    url('../img/hero.jpg');
    background-size: cover;                   /* Cover means whenever the width of viewport/element, it's always try to fit the element inside of the box.  */  
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 3.5rem;
    }
    
    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;                         /* 50% to the left of the perent element to the left side */
        transform: translate(-50%, -50%);  /* This is in relation to the element itself */
        text-align: center;
    }
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
   
    backface-visibility: hidden;        /* fix for shaking animations */
    margin-bottom: 6rem;

    &--main {
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
    
        animation-name: moveInLeft;
        animation-duration: 1s;
        animation-timing-function: ease-out;
    
        /* 
        animation-delay: 3s;                 - w8ing 3 seconds before animation will start.
        animation-iteration-count: 3;        - Tha animation will happen three times.
        animation-timing-function: ease-in;  - Animation will start slower and then accelerate overtime.
        animation-timing-function: cubic-bezier(0.1, ....);  - Allows us to write custom timing function.
        */
    }
    
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.75rem;
        animation: moveInRight 1s ease-out;
    }
}



@keyframes moveInLeft {
    0% {                                  /* We start with 0% which is bofre the animation actually starts. */
        opacity: 0;
        transform: translateX(-10rem);    /* trannslateX(-100px) cus we want to start from to left to right & we want to be more on the left in the beginning. */
    }

    80% {                                 /* We wanted someting to happen when animation is on 80% finished */
        transform: translateX(1rem);
    }

    100% {                                /* The finish is at 100%, which is when animation finishes. */
        opacity: 1;
        transform: translate(0);          /* translate(0) cus we want look exactly the same as before animation start. */
    }
}

@keyframes moveInRight {
    0% {                     
        opacity: 0;
        transform: translateX(10rem);   
    }

    80% {                    
        transform: translateX(-1rem);
    }

    100% {                
        opacity: 1;
        transform: translate(0);         
    }
}

@keyframes moveInBottom {
    0% {                     
        opacity: 0;
        transform: translateY(3rem);   
    }

    100% {                
        opacity: 1;
        transform: translate(0);         
    }
}

.btn {
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem; 
        transition: all .2s;                        /* All the property are enabled to be animated. */
        position: relative;
        font-size: 1.6rem;
    }

    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,.2);

        &::after {                             /* this is after effect only when button is on hover, we want to element to grow and to fade out. */
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    
    &:active {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }
    
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }
    
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;                                /* z-index define the postion of the elements if they are on tog of another, this is -1  -so definitly behind the button. */
        transition: all .4s;
    }
            
    &--animated {
        animation: moveInBottom .5s ease-out .75;
        animation-fill-mode: backwards;             /* That will automatically apply the styles up to zero prercent before the animation starts */
    }

}





















